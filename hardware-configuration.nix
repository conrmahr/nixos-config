# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [ (modulesPath + "/installer/scan/not-detected.nix") ];

  boot.initrd = { 
    availableKernelModules = [ "xhci_pci" "ahci" "nvme" "usbhid" "usb_storage" "sd_mod" ];
    kernelModules = [ ];
    luks.devices = {
        cryptkey = {
          device = "/dev/disk/by-uuid/258154f6-2817-4c8a-8e87-709a00c19e3f";
        };
        cryptroot = {
          allowDiscards = true;
          device = "/dev/disk/by-uuid/4e677e2a-c28e-4e6a-b694-bfa6560f67a9";
          keyFile = "/dev/mapper/cryptkey";
          keyFileSize = 8192;
        };
        cryptswap = {
          allowDiscards = true;
          device = "/dev/disk/by-uuid/7e634364-7b89-42d6-9c0c-762c1c285ba0";
          keyFile = "/dev/mapper/cryptkey";
          keyFileSize = 8192;
        };
      };
  };
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "nvme-pool/system/root";
      fsType = "zfs";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/12CE-A600";
      fsType = "vfat";
    };

  fileSystems."/nix" =
    { device = "nvme-pool/local/nix";
      fsType = "zfs";
    };

  fileSystems."/var" =
    { device = "nvme-pool/system/var";
      fsType = "zfs";
    };

  fileSystems."/home/conor" =
    { device = "nvme-pool/user/home/conor";
      fsType = "zfs";
    };

    swapDevices = [
      {
        device = "/dev/mapper/cryptswap";
      }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  networking.hostId = "0730ae51";
  # networking.interfaces.enp1s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp2s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp3s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp4s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode =
    lib.mkDefault config.hardware.enableRedistributableFirmware;
}
